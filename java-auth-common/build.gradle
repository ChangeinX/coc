plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.clanboards'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    // GraphQL and Reactor (optional dependencies)
    compileOnly 'org.springframework.boot:spring-boot-starter-graphql'
    compileOnly 'org.springframework.boot:spring-boot-starter-webflux'
    
    // JWT
    api 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    testImplementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    
    // Jackson for JSON processing
    api 'com.fasterxml.jackson.core:jackson-databind'
    api 'org.springframework.security:spring-security-oauth2-jose'
    
    // Logging
    api 'org.slf4j:slf4j-api'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-graphql'
    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'
    jvmArgs '--add-opens', 'java.base/java.util=ALL-UNNAMED'
}

spotless {
    java {
        target 'src/**/*.java'
        googleJavaFormat()
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

// Make this a library without executable jar
jar {
    enabled = true
    archiveClassifier = ''
}

bootJar {
    enabled = false
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}
